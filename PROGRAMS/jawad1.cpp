

#include<iostream>
#include<string>
using namespace std;
void a()
{
	cout<<"  >> NAME          = ";
	
}
void b()
{
	cout<<"  >> ATOMIC NUMBER = ";
}
void c()
{
	cout<<"  >> ATOMIC WIEGHT = ";
}
void d()
{
	cout<<"  >> COLOR         = ";
}
void e()
{
	cout<<"  >> PHYSICAL STATE= ";
}
void f()
{
	cout<<"  >> GROUP NO      = ";
}
void g()
{
	cout<<"  >> BLOCK NAME    = ";
}
void ab()
{ 
	cout<<"  >> SYMBOL        = ";
}
int main()
{
	int n;
char    n2;
int  n3 ;
int atmno;
string n1[200],atmwie[200],col[200],phystate[200],grpno[200],blknm[200],sym[200];
string  m ;
string	a1="Hydrogen",
	a2="Helium",
	a3="Lithium",
	a4="Beryllium",
	a5="Boron",
	a6="Carbon",
	a7="Nitrogen",
	a8="Oxygen",
	a9="Fluorine",
	a10="Neon",
	a11="Sodium",
	a12="Magnesium",
	a13="Aluminium",
	a14="Silicon",
	a15="Phosphorus",
	a16="Sulphur",
	a17="Chlorine",
	a18="Argon",
	a19="Potassium",
	a20="Calcium",
	a21="Scandium",
	a22="Titanium",
	a23="Vanadium",
	a24="Chromium",
	a25="Manganese",
	a26="Iron",
	a27="Cobalt",
	a28="Nickel",
	a29="Copper",
	a30="Zinc",
	a31="Gallium",
	a32="Germanium",
	a33="Arsenic",
	a34="Selenium",
	a35="Bromine",
	a36="Krypton",
	a37="Rubidium",
	a38="Strontium",
	a39="Yttrium",
	a40="Zirconium",
	a41="Niobium",
	a42="Molybdenum",
	a43="Technetium",
	a44="Ruthenium",
	a45="Rhodium",
	a46="Palladium",
	a47="Silver",
	a48="Cadmium",
	a49="Indium",
	a50="Tin",
	a51="Antimony",
	a52="Tellurium",
	a53="Iodine",
	a54="Xenon",
	a55="Caesium",
	a56="Barium",
	a57="Lanthanum",
	a58="Cerium",
	a59="Praseodymium",
	a60="Neodymium",
	a61="Promethium",
	a62="Samarium",
	a63="Europium",
	a64="Gadolinium",
	a65="Terbium",
	a66="Dysprosium",
	a67="Holmium",
	a68="Erbium",
	a69="Thulium",
	a70="Ytterbium",
	a71="Lutetium",
	a72="Hafnium",
	a73="Tantalum",
	a74="Tungsten",
	a75="Rhenium",
	a76="Osmium",
	a77="Iridium",
	a78="Platinum",
	a79="Gold",
	a80="Mercury",
	a81="Thallium",
	a82="Lead",
	a83="Bismuth",
	a84="Polonium",
	a85="Astatine",
	a86="Radon",
	a87="Francium",
	a88="Radium",
	a89="Actinium",
	a90="Thorium",
	a91="Protactinium",
	a92="Uranium",
	a93="Neptunium",
	a94="Plutonium",
	a95="Americium",
	a96="Curium",
	a97="Berkelium",
	a98="Californium",
	a99="Einsteinium",
	a100="Fermium",
	a101="Mendelevium",
	a102="Nobelium",
	a103="Lawrencium",
	a104="Rutherfordium",
	a105="Dubnium",
	a106="Seaborgium",
	a107="Bohrium",
	a108="Hassium",
	a109="Meitnerium",
	a110="Darmstadtium",
	a111="Roentgenium",
	a112="Copernicium",
	a113="Nihonium";
	string	f1="H",
	f2="He",
	f3="Li",
	f4="Be",
	f5="B",
	f6="C",
	f7="N",
	f8="O",
	f9="F",
	f10="Ne",
	f11="Na",
	f12="Mg",
	f13="Al",
	f14="Si",
	f15="P",
	f16="S" ,
	f17="Cl",
	f18="Ar",
	f19="K",
	f20="Ca",
	f21="Sc",
	f22="Ti",
	f23="V",	
	f24="Cr",
	f25="Mn",
	f26="Fe",
	f27="Co",
	f28="Ni",
	f29="Cu",
	f30="Zn",
	f31="Ga",
	f32="Ge",
	f33="As",
	f34="Se",
	f35="Br",
	f36="Kr",
	f37="Rb",
	f38="Sr",
	f39="Y"	,
	f40="Zr",
	f41="Nb",
	f42="Mo",
	f43="Tc",
	f44="Ru",
	f45="Rh",
	f46="Pd",
	f47="Ag",
	f48="Cd",
	f49="In",
	f50="Sn",
	f51="Sb",
	f52="Te",
	f53="I",
	f54="Xe",
	f55="Cs",
	f56="Ba",
	f57="La",
	f58="Ce",
	f59="Pr",
	f60="Nd",
	f61="Pm",
	f62="Sm",
	f63="Eu",
	f64="Gd",
	f65="Tb",
	f66="Dy",
	f67="Ho",
	f68="Er",
	f69="Tm",
	f70="Yb",
	f71="Lu",
	f72="Hf",
	f73="Ta",
	f74="W",
	f75="Re",
	f76="Os",
	f77="Ir",
	f78="Pt",
	f79="Au",
	f80="Hg",
	f81="Tl",
	f82="Pb",
	f83="Bi",
	f84="Po",
	f85="At",
	f86="Rn",
	f87="Fr",
	f88="Ra",
	f89="Ac",
	f90="Th",
	f91="Pa",
	f92="U",
	f93="Np",
	f94="Pu",
	f95="Am",
	f96="Cm",
	f97="Bk",
	f98="Cf",
	f99="Es",
	f100="Fm",
	f101="Md",
	f102="No",
	f103="Lr",
	f104="Rf",
	f105="Db",
	f106="Sg",
	f107="Bh",
	f108="Hs",
	f109="Mt",
	f110="Ds",
	f111="Rg",
	f112="Cn",
	f113="Nh";

string	h1="1",
	h2="18",
	h3="1",
	h4="2",
	h5="13",
	h6="14",
	h7="15",
	h8="16",
	h9="17",
	h10="18",
	h11="1",
	h12="2",
	h13="13",
	h14="14",
	h15="15",
	h16="16",
	h17="17",
	h18="18",
	h19="1",
	h20="2",
	h21="3",
	h22="4",
	h23="5",
	h24="6",
	h25="7",
	h26="8",
	h27="9",
	h28="10",
	h29="11",
	h30="12",
	h31="13",
	h32="14",
	h33="15",
	h34="16",
	h35="17",
	h36="18",
	h37="1",
	h38="2",
	h39="3",
	h40="4",
	h41="5",
	h42="6",
	h43="7",
	h44="8",
	h45="9",
	h46="10",
	h47="11",
	h48="12",
	h49="13",
	h50="14",
	h51="15",
	h52="16",
	h53="17",
	h54="18",
	h55="1",
	h56="2",
	h57="3",
	h58="3",
	h59="3",
	h60="3",
	h61="3",
	h62="3",
	h63="3",
	h64="3",
	h65="3",
	h66="3",
	h67="3",
	h68="3",
	h69="3",
	h70="3",
	h71="3",
	h72="4",
	h73="5",
	h74="6",
	h75="7",
	h76="8",
	h77="9",
	h78="10",
	h79="11",
	h80="12",
	h81="13",
	h82="14",
	h83="15",
	h84="16",
	h85="17",
	h86="18",
	h87="1",
	h88="2",
	h89="3",
	h90="3",
	h91="3",
	h92="3",
	h93="3",
	h94="3",
	h95="3",
	h96="3",
	h97="3",
	h98="3",
	h99="3",
	h100="3",
	h101="3",
	h102="3",
	h103="3",
	h104="4",
	h105="5",
	h106="6",
	h107="7",
	h108="8",
	h109="9",
	h110="10",
	h111="11",
	h112="12",
	h113="13";

string	c1="1.008",
	c2="4.002602",
	c3="6.94",
	c4="9.0121831",
	c5="10.81",
	c6="12.011",
	c7="14.007",
	c8="15.999",
	c9="18.998403163",
	c10="20.1797",
	c11="22.98976928",
	c12="24.305",
	c13="26.9815384",
	c14="28.085",
	c15="30.973761998",
	c16="32.06",
	c17="35.45",
	c18="39.948",
	c19="39.0983",
	c20="40.078",
	c21="44.955908",
	c22="47.867",
	c23="50.9415",
	c24="51.9961",
	c25="54.938043",
	c26="55.845",
	c27="58.933194",
	c28="58.6934",
	c29="63.546",
	c30="65.38",
	c31="69.723",
	c32="72.630",
	c33="74.921595",
	c34="78.971",
	c35="79.904",
	c36="83.798",
	c37="85.4678",
	c38="87.62",
	c39="88.90584",
	c40="91.224",
	c41="92.90637",
	c42="95.95",
	c43="98.9063",
	c44="101.07",
	c45="102.90549",
	c46="106.42",
	c47="107.8682",
	c48="112.414",
	c49="114.818",
	c50="118.710",
	c51="121.760",
	c52="127.60",
	c53="126.9044",
	c54="131.293(6)",
	c55="132.90545196",
	c56="137.327",
	c57="138.90547",
	c58="140.116",
	c59="140.90766",
	c60="144.242",
	c61="146.9151",
	c62="150.36",
	c63="151.964",
	c64="157.25",
	c65="158.925354",
	c66="162.500",
	c67="164.930328",
	c68="167.259",
	c69="168.934218",
	c70="173.045",
	c71="174.9668",
	c72="178.49",
	c73="180.94788",
	c74="183.84",
	c75="186.207",
	c76="190.23",
	c77="192.217",
	c78="195.084",
	c79="196.966570",
	c80="200.592",
	c81="204.38",
	c82="207.2",
	c83="208.98040",
	c84="208.982",
	c85="209.9871",
	c86="222.0176",
	c87="223.0197",
	c88="226.0254",
	c89="227.027",
	c90="232.0377",
	c91="231.03588",
	c92="238.02891",
	c93="237.0482",
	c94="244.0642",
	c95="243.0614",
	c96="247.0703",
	c97="247.0703",
	c98="251.0796",
	c99="252.0829",
	c100="257.0951",
	c101="258.0986",
	c102="259.1009",
	c103="260.1053",
	c104="261.1087",
	c105="262.1,138",
	c106="263.1182",
	c107="262.1229",
	c108="265",
	c109="266",
	c110="269",
	c111="272",
	c112="277",
	c113="unknown";
string	d1	="Colorless",	
    d2	="Colorless",	
	d3	="Silver",	
	d4	="SlateGray",	
	d5	="Black",	
	d6	="Black",	
	d7	="Colorless",	
	d8	="Colorless",	
	d9	="Colorless",	
	d10	="Colorless",	
	d11	="Silver",	
	d12	="Silver",	
	d13	="Silver",	
	d14	="Gray",	
	d15	="Colorless",	
	d16	="Yellow",	
	d17	="Yellow",	
	d18	="Colorless",	
	d19	="Silver",	
	d20	="Silver",	
	d21	="Silver",	
	d22	="Silver",	
	d23	="Silver",	
	d24	="Silver",	
	d25	="Silver",	
	d26	="Gray",	
	d27	="Gray",	
	d28	="Gray",	
	d29	="Copper",	
	d30	="SlateGray",	
	d31	="Silver",	
	d32	="Gray",	
	d33	="Silver",	
	d34	="Gray",	
	d35	="Red",	
	d36	="Colorless",	
	d37	="Silver",	
	d38	="Silver",	
	d39	="Silver",	
	d40	="Silver",	
	d41	="Gray",	
	d42	="Gray",	
	d43	="Silver",	
	d44	="Silver",	
	d45	="Silver",	
	d46	="Silver",	
	d47	="Silver",	
	d48	="Silver",	
	d49	="Silver",	
	d50 ="Silver",	
	d51	="Silver",	
	d52	="Silver",	
	d53	="SlateGray",	
	d54	="Colorless",	
	d55	="Silver",	
	d56	="Silver",	
	d57	="Silver",	
	d58	="Silver",	
	d59	="Silver",	
	d60	="Silver",	
	d61	="Silver",	
	d62	="Silver",	
	d63	="Silver",	
	d64	="Silver",	
	d65	="Silver",	
	d66	="Silver",	
	d67	="Silver",	
	d68	="Silver",	
	d69	="Silver",	
	d70	="Silver",	
	d71	="Silver",	
	d72	="Gray",	
	d73	="Gray",	
	d74	="Gray",	
	d75	="Gray",	
	d76	="SlateGray",	
	d77	="Silver",	
	d78	="Gray",	
	d79	="Gold",	
	d80	="N/A",	
	d81	="Silver",	
	d82	="SlateGray",	
	d83	="Gray",	
	d84	="Silver",	
	d85	="Silver",	
	d86	="Colorless",	
	d87	="Silver",	
	d88	="Silver",	
	d89	="Silver",	
	d90	="Silver",	
	d91	="Silver",	
	d92	="Silver",	
	d93	="Silver",	
	d94	="Silver",	
	d95	="Silver",	
	d96	="Silver",	
	d97	="N/A",	
	d98	="N/A",	
	d99	="N/A",	
	d100="N/A",		
	d101="N/A",		
	d102="N/A",		
	d103="N/A",		
	d104="N/A",		
	d105="N/A",		
	d106="N/A",		
	d107="N/A",		
	d108="N/A",		
	d109="N/A",		
	d110="N/A",		
	d111="N/A",		
	d112="N/A",		
	d113="N/A";	
	string e1	=	"Gas"	,
e2	=	"Gas"	,
e3	=	"Solid"	,
e4	=	"Solid"	,
e5	=	"Solid"	,
e6	=	"Solid"	,
e7	=	"Gas"	,
e8	=	"Gas"	,
e9	=	"Gas"	,
e10	=	"Gas"	,
e11	=	"Solid"	,
e12	=	"Solid"	,
e13	=	"Solid"	,
e14	=	"Solid"	,
e15	=	"Solid"	,
e16	=	"Solid"	,
e17	=	"Gas"	,
e18	=	"Gas"	,
e19	=	"Solid"	,
e20	=	"Solid"	,
e21	=	"Solid"	,
e22	=	"Solid"	,
e23	=	"Solid"	,
e24	=	"Solid"	,
e25	=	"Solid"	,
e26	=	"Solid"	,
e27	=	"Solid"	,
e28	=	"Solid"	,
e29	=	"Solid"	,
e30	=	"Solid"	,
e31	=	"Solid"	,
e32	=	"Solid"	,
e33	=	"Solid"	,
e34	=	"Solid"	,
e35	=	"Liquid"	,
e36	=	"Gas"	,
e37	=	"Solid"	,
e38	=	"Solid"	,
e39	=	"Solid"	,
e40	=	"Solid"	,
e41	=	"Solid"	,
e42	=	"Solid"	,
e43	=	"Solid"	,
e44	=	"Solid"	,
e45	=	"Solid"	,
e46	=	"Solid"	,
e47	=	"Solid"	,
e48	=	"Solid"	,
e49	=	"Solid"	,
e50	=	"Solid"	,
e51	=	"Solid"	,
e52	=	"Solid"	,
e53	=	"Solid"	,
e54	=	"Gas"	,
e55	=	"Solid"	,
e56	=	"Solid"	,
e57	=	"Solid"	,
e58	=	"Solid"	,
e59	=	"Solid"	,
e60	=	"Solid"	,
e61	=	"Solid"	,
e62	=	"Solid"	,
e63	=	"Solid"	,
e64	=	"Solid"	,
e65	=	"Solid"	,
e66	=	"Solid"	,
e67	=	"Solid"	,
e68	=	"Solid"	,
e69	=	"Solid"	,
e70	=	"Solid"	,
e71	=	"Solid"	,
e72	=	"Solid"	,
e73	=	"Solid"	,
e74	=	"Solid"	,
e75	=	"Solid"	,
e76	=	"Solid"	,
e77	=	"Solid"	,
e78	=	"Solid"	,
e79	=	"Solid"	,
e80	=	"Liquid"	,
e81	=	"Solid"	,
e82	=	"Solid"	,
e83	=	"Solid"	,
e84	=	"Solid"	,
e85	=	"Solid"	,
e86	=	"Gas"	,
e87	=	"Solid"	,
e88	=	"Solid"	,
e89	=	"Solid"	,
e90	=	"Solid"	,
e91	=	"Solid"	,
e92	=	"Solid"	,
e93	=	"Solid"	,
e94	=	"Solid"	,
e95	=	"Solid"	,
e96	=	"Solid"	,
e97	=	"Solid"	,
e98	=	"Solid"	,
e99	=	"Solid"	,
e100	=	"Solid"	,
e101	=	"Solid"	,
e102	=	"Solid"	,
e103	=	"Solid"	,
e104	=	"Solid"	,
e105	=	"N/A"	,
e106	=	"N/A"	,
e107	=	"N/A"	,
e108	=	"N/A"	,
e109	=	"N/A"	,
e110	=	"N/A"	,
e111	=	"N/A"	,
e112	=	"N/A"	,
e113	=	"N/A"	;
string g1	=	"s"	,
g2	=	"s"	,
g3	=	"s"	,
g4	=	"s"	,
g5	=	"p"	,
g6	=	"p"	,
g7	=	"p"	,
g8	=	"p"	,
g9	=	"p"	,
g10	=	"p"	,
g11	=	"s"	,
g12	=	"s"	,
g13	=	"p"	,
g14	=	"p"	,
g15	=	"p"	,
g16	=	"p"	,
g17	=	"p"	,
g18	=	"p"	,
g19	=	"s"	,
g20	=	"s"	,
g21	=	"d"	,
g22	=	"d"	,
g23	=	"d"	,
g24	=	"d"	,
g25	=	"d"	,
g26	=	"d"	,
g27	=	"d"	,
g28	=	"d"	,
g29	=	"d"	,
g30	=	"d"	,
g31	=	"p"	,
g32	=	"p"	,
g33	=	"p"	,
g34	=	"p"	,
g35	=	"p"	,
g36	=	"p"	,
g37	=	"s"	,
g38	=	"s"	,
g39	=	"d"	,
g40	=	"d"	,
g41	=	"d"	,
g42	=	"d"	,
g43	=	"d"	,
g44	=	"d"	,
g45	=	"d"	,
g46	=	"d"	,
g47	=	"d"	,
g48	=	"d"	,
g49	=	"p"	,
g50	=	"p"	,
g51	=	"p"	,
g52	=	"p"	,
g53	=	"p"	,
g54	=	"p"	,
g55	=	"s"	,
g56	=	"s"	,
g57	=	"f"	,
g58	=	"f"	,
g59	=	"f"	,
g60	=	"f"	,
g61	=	"f"	,
g62	=	"f"	,
g63	=	"f"	,
g64	=	"f"	,
g65	=	"f"	,
g66	=	"f"	,
g67	=	"f"	,
g68	=	"f"	,
g69	=	"f"	,
g70	=	"f"	,
g71	=	"d"	,
g72	=	"d"	,
g73	=	"d"	,
g74	=	"d"	,
g75	=	"d"	,
g76	=	"d"	,
g77	=	"d"	,
g78	=	"d"	,
g79	=	"d"	,
g80	=	"d"	,
g81	=	"p"	,
g82	=	"p"	,
g83	=	"p"	,
g84	=	"p"	,
g85	=	"p"	,
g86	=	"p"	,
g87	=	"s"	,
g88	=	"s"	,
g89	=	"f"	,
g90	=	"f"	,
g91	=	"f"	,
g92	=	"f"	,
g93	=	"f"	,
g94	=	"f"	,
g95	=	"f"	,
g96	=	"f"	,
g97	=	"f"	,
g98	=	"f"	,
g99	=	"f"	,
g100=   "f"	,
g101=	"f"	,
g102=	"f"	,
g103=	"d"	,
g104=	"d"	,
g105=	"d"	,
g106=	"d"	,
g107=	"d"	,
g108=	"d"	,
g109=	"d"	,
g110=	"d"	,
g111=	"d"	,
g112=	"d"	,
g113=	"p"	;
				
					



string arra[200]={     a1,
a2	,
a3	,
a4	,
a5	,
a6	,
a7	,
a8	,
a9	,
a10	,
a11	,
a12	,
a13	,
a14	,
a15	,
a16	,
a17	,
a18	,
a19	,
a20	,
a21	,
a22	,
a23	,
a24	,
a25	,
a26	,
a27	,
a28	,
a29	,
a30	,
a31	,
a32	,
a33	,
a34	,
a35	,
a36	,
a37	,
a38	,
a39	,
a40	,
a41	,
a42	,
a43	,
a44	,
a45	,
a46	,
a47	,
a48	,
a49	,
a50	,
a51	,
a52	,
a53	,
a54	,
a55	,
a56	,
a57	,
a58	,
a59	,
a60	,
a61	,
a62	,
a63	,
a64	,
a65	,
a66	,
a67	,
a68	,
a69	,
a70	,
a71	,
a72	,
a73	,
a74	,
a75	,
a76	,
a77	,
a78	,
a79	,
a80	,
a81	,
a82	,
a83	,
a84	,
a85	,
a86	,
a87	,
a88	,
a89	,
a90	,
a91	,
a92	,
a93	,
a94	,
a95	,
a96	,
a97	,
a98	,
a99	,
a100	,
a101	,
a102	,
a103	,
a104	,
a105	,
a106	,
a107	,
a108	,
a109	,
a110	,
a111	,
a112	,
a113
};
string arrf[200]={f1	,
f2	,
f3	,
f4	,
f5	,
f6	,
f7	,
f8	,
f9	,
f10	,
f11	,
f12	,
f13	,
f14	,
f15	,
f16	,
f17	,
f18	,
f19	,
f20	,
f21	,
f22	,
f23	,
f24	,
f25	,
f26	,
f27	,
f28	,
f29	,
f30	,
f31	,
f32	,
f33	,
f34	,
f35	,
f36	,
f37	,
f38	,
f39	,
f40	,
f41	,
f42	,
f43	,
f44	,
f45	,
f46	,
f47	,
f48	,
f49	,
f50	,
f51	,
f52	,
f53	,
f54	,
f55	,
f56	,
f57	,
f58	,
f59	,
f60	,
f61	,
f62	,
f63	,
f64	,
f65	,
f66	,
f67	,
f68	,
f69	,
f70	,
f71	,
f72	,
f73	,
f74	,
f75	,
f76	,
f77	,
f78	,
f79	,
f80	,
f81	,
f82	,
f83	,
f84	,
f85	,
f86	,
f87	,
f88	,
f89	,
f90	,
f91	,
f92	,
f93	,
f94	,
f95	,
f96	,
f97	,
f98	,
f99	,
f100	,
f101	,
f102	,
f103	,
f104	,
f105	,
f106	,
f107	,
f108	,
f109	,
f110	,
f111	,
f112	,
f113	
};
string arrh[200]={h1	,
h2	,
h3	,
h4	,
h5	,
h6	,
h7	,
h8	,
h9	,
h10	,
h11	,
h12	,
h13	,
h14	,
h15	,
h16	,
h17	,
h18	,
h19	,
h20	,
h21	,
h22	,
h23	,
h24	,
h25	,
h26	,
h27	,
h28	,
h29	,
h30	,
h31	,
h32	,
h33	,
h34	,
h35	,
h36	,
h37	,
h38	,
h39	,
h40	,
h41	,
h42	,
h43	,
h44	,
h45	,
h46	,
h47	,
h48	,
h49	,
h50	,
h51	,
h52	,
h53	,
h54	,
h55	,
h56	,
h57	,
h58	,
h59	,
h60	,
h61	,
h62	,
h63	,
h64	,
h65	,
h66	,
h67	,
h68	,
h69	,
h70	,
h71	,
h72	,
h73	,
h74	,
h75	,
h76	,
h77	,
h78	,
h79	,
h80	,
h81	,
h82	,
h83	,
h84	,
h85	,
h86	,
h87	,
h88	,
h89	,
h90	,
h91	,
h92	,
h93	,
h94	,
h95	,
h96	,
h97	,
h98	,
h99	,
h100	,
h101	,
h102	,
h103	,
h104	,
h105	,
h106	,
h107	,
h108	,
h109	,
h110	,
h111	,
h112	,
h113	
};
string arrc[200]={c1	,
c2	,
c3	,
c4	,
c5	,
c6	,
c7	,
c8	,
c9	,
c10	,
c11	,
c12	,
c13	,
c14	,
c15	,
c16	,
c17	,
c18	,
c19	,
c20	,
c21	,
c22	,
c23	,
c24	,
c25	,
c26	,
c27	,
c28	,
c29	,
c30	,
c31	,
c32	,
c33	,
c34	,
c35	,
c36	,
c37	,
c38	,
c39	,
c40	,
c41	,
c42	,
c43	,
c44	,
c45	,
c46	,
c47	,
c48	,
c49	,
c50	,
c51	,
c52	,
c53	,
c54	,
c55	,
c56	,
c57	,
c58	,
c59	,
c60	,
c61	,
c62	,
c63	,
c64	,
c65	,
c66	,
c67	,
c68	,
c69	,
c70	,
c71	,
c72	,
c73	,
c74	,
c75	,
c76	,
c77	,
c78	,
c79	,
c80	,
c81	,
c82	,
c83	,
c84	,
c85	,
c86	,
c87	,
c88	,
c89	,
c90	,
c91	,
c92	,
c93	,
c94	,
c95	,
c96	,
c97	,
c98	,
c99	,
c100	,
c101	,
c102	,
c103	,
c104	,
c105	,
c106	,
c107	,
c108	,
c109	,
c110	,
c111	,
c112	,
c113	
};
string arrd[200]={d1	,
d2	,
d3	,
d4	,
d5	,
d6	,
d7	,
d8	,
d9	,
d10	,
d11	,
d12	,
d13	,
d14	,
d15	,
d16	,
d17	,
d18	,
d19	,
d20	,
d21	,
d22	,
d23	,
d24	,
d25	,
d26	,
d27	,
d28	,
d29	,
d30	,
d31	,
d32	,
d33	,
d34	,
d35	,
d36	,
d37	,
d38	,
d39	,
d40	,
d41	,
d42	,
d43	,
d44	,
d45	,
d46	,
d47	,
d48	,
d49	,
d50	,
d51	,
d52	,
d53	,
d54	,
d55	,
d56	,
d57	,
d58	,
d59	,
d60	,
d61	,
d62	,
d63	,
d64	,
d65	,
d66	,
d67	,
d68	,
d69	,
d70	,
d71	,
d72	,
d73	,
d74	,
d75	,
d76	,
d77	,
d78	,
d79	,
d80	,
d81	,
d82	,
d83	,
d84	,
d85	,
d86	,
d87	,
d88	,
d89	,
d90	,
d91	,
d92	,
d93	,
d94	,
d95	,
d96	,
d97	,
d98	,
d99	,
d100	,
d101	,
d102	,
d103	,
d104	,
d105	,
d106	,
d107	,
d108	,
d109	,
d110	,
d111	,
d112	,
d113	
};
string arre[200]={e1	,
e2	,
e3	,
e4	,
e5	,
e6	,
e7	,
e8	,
e9	,
e10	,
e11	,
e12	,
e13	,
e14	,
e15	,
e16	,
e17	,
e18	,
e19	,
e20	,
e21	,
e22	,
e23	,
e24	,
e25	,
e26	,
e27	,
e28	,
e29	,
e30	,
e31	,
e32	,
e33	,
e34	,
e35	,
e36	,
e37	,
e38	,
e39	,
e40	,
e41	,
e42	,
e43	,
e44	,
e45	,
e46	,
e47	,
e48	,
e49	,
e50	,
e51	,
e52	,
e53	,
e54	,
e55	,
e56	,
e57	,
e58	,
e59	,
e60	,
e61	,
e62	,
e63	,
e64	,
e65	,
e66	,
e67	,
e68	,
e69	,
e70	,
e71	,
e72	,
e73	,
e74	,
e75	,
e76	,
e77	,
e78	,
e79	,
e80	,
e81	,
e82	,
e83	,
e84	,
e85	,
e86	,
e87	,
e88	,
e89	,
e90	,
e91	,
e92	,
e93	,
e94	,
e95	,
e96	,
e97	,
e98	,
e99	,
e100	,
e101	,
e102	,
e103	,
e104	,
e105	,
e106	,
e107	,
e108	,
e109	,
e110	,
e111	,
e112	,
e113	
};
string arrg[200]={g1	,
g2	,
g3	,
g4	,
g5	,
g6	,
g7	,
g8	,
g9	,
g10	,
g11	,
g12	,
g13	,
g14	,
g15	,
g16	,
g17	,
g18	,
g19	,
g20	,
g21	,
g22	,
g23	,
g24	,
g25	,
g26	,
g27	,
g28	,
g29	,
g30	,
g31	,
g32	,
g33	,
g34	,
g35	,
g36	,
g37	,
g38	,
g39	,
g40	,
g41	,
g42	,
g43	,
g44	,
g45	,
g46	,
g47	,
g48	,
g49	,
g50	,
g51	,
g52	,
g53	,
g54	,
g55	,
g56	,
g57	,
g58	,
g59	,
g60	,
g61	,
g62	,
g63	,
g64	,
g65	,
g66	,
g67	,
g68	,
g69	,
g70	,
g71	,
g72	,
g73	,
g74	,
g75	,
g76	,
g77	,
g78	,
g79	,
g80	,
g81	,
g82	,
g83	,
g84	,
g85	,
g86	,
g87	,
g88	,
g89	,
g90	,
g91	,
g92	,
g93	,
g94	,
g95	,
g96	,
g97	,
g98	,
g99	,
g100	,
g101	,
g102	,
g103	,
g104	,
g105	,
g106	,
g107	,
g108	,
g109	,
g110	,
g111	,
g112	,
g113	
};





		

	cout<<"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";
cout<<"\t\t\t\t\t@@ _______________________________________________________________________________________ @@\n";
cout<<"\t\t\t\t\t@@|                                           		                                  |@@\n";
cout<<"\t\t\t\t\t@@|                                           		                                  |@@\n";
cout<<"\t\t\t\t\t@@|                                           		                                  |@@\n";
cout<<"\t\t\t\t\t@@|                                           		                                  |@@\n";
cout<<"\t\t\t\t\t@@|                                           		                                  |@@\n";
cout<<"\t\t\t\t\t@@|                               MODERN PERIODIC TABLE          		                  |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                               ______ DIGITAL_______                                   |@@\n";
cout<<"\t\t\t\t\t@@|                PHYSICAL AND CHEMICAL PROPERTIES OF SPECIFIED ELEMENT                  |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|_______________________________________________________________________________________|@@\n";
cout<<"\t\t\t\t\t@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n\n\n\n\t\t\t\t\t";
system("pause");
system("cls");


    	while(true)
	{
	a:	
		cout<<"                                                                       MODERN PERIODIC TABLE                                      "<<endl;
    cout<<"                                                                       ______ DIGITAL_______ "<<endl;
	cout<<endl;
	cout<<"                                                        PHYSICAL AND CHEMICAL PROPERTIES OF SPECIFIED ELEMENT        ";
	cout<<endl;
	cout<<endl;
	
cout<<"\t\t\t\t\t\t _________________________________________________________________ \n";
cout<<"\t\t\t\t\t\t|                                           	                  |\n";
cout<<"\t\t\t\t\t\t|             1  >> Add ELEMENT'S PROPERTIES                      |\n";
cout<<"\t\t\t\t\t\t|             2  >> EXPLORE ELEMENT'S PROPERTIES                  |\n";
cout<<"\t\t\t\t\t\t|             3  >> Exit the Program                              |\n";
cout<<"\t\t\t\t\t\t|_________________________________________________________________|\n\n";
	cout<<"\n\n\t\t\t\t\t\tPlease,  Choose from the above Options: ";	cin >> n; 
	cout<<endl<<endl<<endl<<endl;
		 if(n == 1)
		{
b();
cin>>atmno;	
if(atmno>113)
{
			
a();
cin>>arra[atmno-1];

c();
cin>>arrc[atmno-1];
d();
cin>>arrd[atmno-1];
e();
cin>>arre[atmno-1];
f();
cin>>arrh[atmno-1];
g();
cin>>arrg[atmno-1];
ab();
cin>>arrf[atmno-1];}
else 
{
	cout<<"                                                                           ELEMENTS ALREADEY PRESENT "<<endl;
}
system("pause");
    
	system("cls");		}
	else	if(n == 2) 
		{
		system("pause");
    start:
	system("cls");
	cout<<"                                                             MODERN PERIODIC TABLE                                      "<<endl;
    cout<<"                                                             ______ DIGITAL_______ "<<endl;
	cout<<endl;
	cout<<"                                              PHYSICAL AND CHEMICAL PROPERTIES OF SPECIFIED ELEMENT        ";
	cout<<endl;
	cout<<endl<<endl<<endl;
	
		cout<<"\t\t\t\t\t\t        | EXPLORING ELEMENT'S PROPERTIES |                 \n\n\n\n\n";
		
		cout<<"                                                      1.Search By 'ATOMIC NO'"<<endl;
		cout<<"                                                      2.Search By 'SYMBOL'    "<<endl;
		cout<<"                                                      3.search By 'NAME'      "<<endl;
		cout <<"                                                     >Enter the corresponding No:";
		cin>>n2;
	system("pause");
    
	system("cls");
	cout<<"                                               MODERN PERIODIC TABLE                                      "<<endl;
    cout<<"                                               ______ DIGITAL_______ "<<endl;
	cout<<endl;
	cout<<"                                    PHYSICAL AND CHEMICAL PROPERTIES OF SPECIFIED ELEMENT        ";
	cout<<endl;
	cout<<endl<<endl<<endl;
   
	
		if(n2=='1')
		{
				cout<<"                                                         Searching By 'ATOMIC NO'"<<endl;
			cout<<"Enter Atomic No of Desire Element = ";
			cin>>n3;
			for(int i=0;i<=200;i++)
			{
				if(i==n3)
				{
		    	a();
				cout<<arra[i-1]<<endl;
				b();
				cout<<n3<<endl;
				c();
				cout<<arrc[i-1]<<endl;
				d();
				cout<<arrd[i-1]<<endl;
				e();
				cout<<arre[i-1]<<endl;
				f();
				cout<<arrh[i-1]<<endl;
				g();
				cout<<arrg[i-1]<<endl;
				ab();
				cout<<arrf[i-1]<<endl;
			
				}
				else if (i==n3)
				{
				a();
				cout<<n1[i-1]<<endl;
				b();
				cout<<atmno<<endl;
				c();
				cout<<atmwie[i-1]<<endl;
				d();
				cout<<col[i-1]<<endl;
				e();
				cout<<phystate[i-1]<<endl;
				f();
				cout<<grpno[i-1]<<endl;
				g();
				cout<<blknm[i-1]<<endl;
				ab();
				cout<<sym[i-1]<<endl;	
					}	
			}system("pause");
    
	system("cls");
	goto a;
			
			}
		   else if(n2=='2')
			{	cout<<"                                                         Searching  By 'SYMBOL'    "<<endl;
			cout<<"Enter 'Symbol' of Desire Element = ";
			cin>>m;	
			cout<<endl;
			for(int j=0;j<=200;j++)
			{
				 if (m==arrf[j])
			{
				a();
				cout<<arra[j]<<endl;
				b();
				cout<<j+1<<endl;
				c();
				cout<<arrc[j]<<endl;
				d();
				cout<<arrd[j]<<endl;
				e();
				cout<<arre[j]<<endl;
				f();
				cout<<arrh[j]<<endl;
				g();
				cout<<arrg[j]<<endl;
				ab();
				cout<<arrf[j]<<endl;
				
			}
			else if(m==sym[j])
			
			{
			a();
				cout<<n1[j]<<endl;
				b();
				cout<<j+1<<endl;
				c();
				cout<<atmwie[j]<<endl;
				d();
				cout<<col[j]<<endl;
				e();
				cout<<phystate[j]<<endl;
				f();
				cout<<grpno[j]<<endl;
				g();
				cout<<blknm[j]<<endl;
				ab();
				cout<<sym[j]<<endl;	
			}
				}	
				system("pause");
    
	system("cls");
	goto a;
			}
			
		else if(n2=='3')
			{	cout<<"                                                         Searching  By 'NAME'    "<<endl;
			cout<<"Enter 'Name' of Desire Element With first capital letter = ";
			cin>>m;	
			cout<<endl;
			for(int j=0;j<=200;j++)
			{
				 if (m==arra[j])
			{
				a();
				cout<<arra[j]<<endl;
				b();
				cout<<j+1<<endl;
				c();
				cout<<arrc[j]<<endl;
				d();
				cout<<arrd[j]<<endl;
				e();
				cout<<arre[j]<<endl;
				f();
				cout<<arrh[j]<<endl;
				g();
				cout<<arrg[j]<<endl;
				ab();
				cout<<arrf[j]<<endl;
				
				
			}
			else if (m==n1[j])
			{
			a();
				cout<<n1[j]<<endl;
				b();
				cout<<j+1<<endl;
				c();
				cout<<atmwie[j]<<endl;
				d();
				cout<<col[j]<<endl;
				e();
				cout<<phystate[j]<<endl;
				f();
				cout<<grpno[j]<<endl;
				g();
				cout<<blknm[j]<<endl;
				ab();
				cout<<sym[j]<<endl;	
			}
			
		
			}
			system("pause");
    
	system("cls");
	goto a;
			}	
		
	
}
			
			
			
		 else if(n == 3) 
		{
			system("cls");
cout<<"\n\n\n\n\n\n\n\n\n\t\t\t\t\t@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";
cout<<"\t\t\t\t\t@@ _______________________________________________________________________________________ @@\n";
cout<<"\t\t\t\t\t@@|                                           		                                  |@@\n";
cout<<"\t\t\t\t\t@@|                                           		                                  |@@\n";
cout<<"\t\t\t\t\t@@|                                           		                                  |@@\n";
cout<<"\t\t\t\t\t@@|                                           		                                  |@@\n";
cout<<"\t\t\t\t\t@@|                                           		                                  |@@\n";
cout<<"\t\t\t\t\t@@|                               THANK YOU FOR USING                                     |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                            DIGITAL MODERN PERIODIC TABLE                              |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                                                                                       |@@\n";
cout<<"\t\t\t\t\t@@|                                                 -Brought To You by SECTION D          |@@\n";
cout<<"\t\t\t\t\t@@|_______________________________________________________________________________________|@@\n";
cout<<"\t\t\t\t\t@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n\n\n\n\t\t\t\t\t";
break;
		}

		
		else if (n>3)
		{
			cout<<"                                                            Invalid Option                                     "<<endl<<endl;
			system("pause");
				system("cls");
		   goto a;
		}
	}
		return 0;

	}
	
	
